//ИНСТРУМЕНТЫ

//5.1

//Все возможности TS такие как автоподстановка или подчеркивания ошибок
//вседает нам TS а не IDE. Эт возможно в любой IDE

//Файлы с типами и сигнатурами методов обычно хранятся в библиотеких
//и имеют расширение (d.ts)

//крутого компилятора не достоаочно чтобы сздавать вэб приложения
//так как приходтся раьотать с CSS, и изображениями
//для этих целей есть Webpack, Babel

//КАРТЫ КОДА////////////////////////////////////////////////////

//Так как в браузере выполняется JS код а не TS
//нам могут понадобится файлы карт кода
//для отладки именно TS кода прямо йз браузера

//такие файлы имеют расширение .map

//в настройках компилятора можно включить опцию 
//создания таких файлов автоматически 
//при помощи sourceMap

class Greeting {
    static sayHallo (name: string){
        console.log('Hello, ' + name);
    }
};

Greeting.sayHallo('John');

//прои помощи опции inlineSources
//можно загружать в файл карт кода и TS код
//тогда можно избежать выгрузки .ts файлов на сервер

//4.2

//ЛИНТЕР TSLINT////////////////////////////////////////////////////

//Линтер - это инструмент который заставляет писать разработчика в определенном стиле
//npx - позволяет работать с папками директории /node_modules/bin

//4.3

//СВЯЗЫВАНИЕ КОДА С ПОМОЩЮ WEBPACK////////////////////////////////////////////////////

//Вебпак - это самый популярны бандлер js кода
//он нужен для того чтобы минимизировать и соединит в один файл
//разные части нашего приложения
//а так же для разделения зависимостей меду продакшен и девелепмент зборкой
//а также обединять CSS файлы, и минифицировать картинки
//и много другого

//webpack-cli - инструмент который служит для быстрой настройки вебпака
